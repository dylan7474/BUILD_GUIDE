# Cross-Platform Game and Application Development Environment

This document outlines a comprehensive process for setting up a Linux-based development environment suitable for writing, compiling, and cross-compiling C applications (especially using SDL2) for both Linux and Windows. It includes installation steps, required dependencies, tools, and workflow practices for application development and distribution.

---

## 1. Project Objective

To build a reliable development environment on Linux (e.g., Ubuntu) for writing SDL2-based C applications and games, with optional networking support (via libcurl), embedded asset handling, and cross-compilation for Windows using MinGW.

---

## 2. System Setup

### 2.1 Install Required Packages

```bash
sudo apt-get update
sudo apt-get install -y libsdl2-mixer-dev
sudo apt-get install -y \
    mingw-w64 build-essential \
    libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev \
    libsdl2-ttf-dev libcurl4-openssl-dev \
    xxd wine unzip libsdl2-mixer-dev
```

### 2.2 Install Inform7 (optional for IF projects)

```bash
wget http://emshort.com/inform-app-archive/6M62/I7_6M62_Linux_all.tar.gz
tar -xzf I7_6M62_Linux_all.tar.gz
cd inform7-6M62
sudo ./install-inform7.sh
echo 'export PATH=$PATH:/usr/local/share/inform7/Compilers' >> ~/.bashrc
# Restart your terminal
```

---

## 3. Setting Up Windows Cross-Compilation

### 3.1 SDL2 Libraries for MinGW

```bash
wget https://github.com/libsdl-org/SDL/releases/download/release-2.30.4/SDL2-2.30.4.tar.gz
wget https://github.com/libsdl-org/SDL_mixer/releases/download/release-2.8.1/SDL2_mixer-devel-2.8.1-mingw.tar.gz
wget https://github.com/libsdl-org/SDL_ttf/releases/download/release-2.22.0/SDL2_ttf-devel-2.22.0-mingw.tar.gz
wget https://github.com/libsdl-org/SDL_image/releases/download/release-2.8.8/SDL2_image-devel-2.8.8-mingw.zip

# Extract and install
for archive in *.tar.gz; do tar -xzf "$archive"; done
unzip SDL2_image-devel-2.8.8-mingw.zip

cd SDL2-2.30.4/
./configure --host=x86_64-w64-mingw32 --prefix=/usr/x86_64-w64-mingw32
make
sudo make install
cd ..

sudo cp -r SDL2_mixer*/x86_64-w64-mingw32/* /usr/x86_64-w64-mingw32/
sudo cp -r SDL2_ttf*/x86_64-w64-mingw32/* /usr/x86_64-w64-mingw32/
sudo cp -r SDL2_image*/x86_64-w64-mingw32/* /usr/x86_64-w64-mingw32/
```

### 3.2 Build and Install libcurl for Windows

```bash
wget https://curl.se/download/curl-8.8.0.tar.gz
tar -xvf curl-8.8.0.tar.gz
cd curl-8.8.0
./configure --host=x86_64-w64-mingw32 --prefix=/usr/x86_64-w64-mingw32 \
  --with-schannel --disable-shared --enable-static \
  --disable-ldap --disable-ldaps
make
sudo make install
```

---

## 4. Asset Embedding

You can embed images or fonts directly into your program:

```bash
xxd -i your_image.png > image_data.h
xxd -i font.ttf > font.h
```

Use the generated arrays in your C source code for fully self-contained executables.

---

## 5. Sample Makefiles

### 5.1 Linux Makefile

```makefile
# Makefile.linux
CC = gcc
TARGET = game
SRCS = main.c
CFLAGS = -Wall -O2 `sdl2-config --cflags`
LDFLAGS = `sdl2-config --libs` -lSDL2_mixer -lcurl -lm

all: $(TARGET)
$(TARGET): $(SRCS)
	$(CC) $(CFLAGS) $(SRCS) -o $(TARGET) $(LDFLAGS)
clean:
	rm -f $(TARGET)
```

### 5.2 Windows Makefile (Cross-Compilation)

```makefile
# Makefile.win
CC = x86_64-w64-mingw32-gcc
TARGET = game.exe
SRCS = main.c
CFLAGS = -I/usr/x86_64-w64-mingw32/include/SDL2 \
         -I/usr/x86_64-w64-mingw32/include \
         -Wall -O2 -DCURL_STATICLIB

LDFLAGS = -L/usr/x86_64-w64-mingw32/lib \
          -lmingw32 -lSDL2main -lSDL2 -lSDL2_mixer \
          -lcurl -lbcrypt -lpthread -lws2_32 -lcrypt32 \
          -lwldap32 -lgdi32 -lwinmm -limm32 -lole32 \
          -loleaut32 -lversion -lsetupapi -lm -mwindows -static

all: $(TARGET)
$(TARGET): $(SRCS)
	$(CC) $(CFLAGS) $(SRCS) -o $(TARGET) $(LDFLAGS)
clean:
	rm -f $(TARGET)
```

To build for Windows:

```bash
make -f Makefile.win
```

---

## 6. Additional Resources

- Sample assets:\
  `wget https://kenney.nl/media/pages/assets/space-shooter-extension/57049efd94-1677693518/kenney_space-shooter-extension.zip`

- SDL documentation: [https://wiki.libsdl.org/](https://wiki.libsdl.org/)

- Inform7 (interactive fiction): [https://inform7.com/](https://inform7.com/)

---

## 7. Sample Workflow

1. Write your source code (`main.c`) and embed any assets.
2. Choose the right Makefile depending on target platform.
3. Compile using `make` or `make -f Makefile.win`.
4. Test locally (Linux) or using Wine (Windows `.exe`).
5. Package the resulting executable.

---

This document is structured for both human understanding and ease of parsing by AI systems, enabling further automation, expansion, or reuse in new projects.

